// Code generated by ValidGen. DO NOT EDIT.

package main

import (
	"github.com/opencodeco/validgen/types"
)

func SliceStringValidate(obj *SliceString) []error {
	var errs []error

	if !(len(obj.TypesRequired) != 0) {
		errs = append(errs, types.NewValidationError("TypesRequired must not be empty"))
	}

	if !(len(obj.TypesMin) >= 2) {
		errs = append(errs, types.NewValidationError("TypesMin must have at least 2 elements"))
	}

	if !(len(obj.TypesMax) <= 5) {
		errs = append(errs, types.NewValidationError("TypesMax must have at most 5 elements"))
	}

	if !(len(obj.TypesLen) == 3) {
		errs = append(errs, types.NewValidationError("TypesLen must have exactly 3 elements"))
	}

	if !(types.SlicesContains(obj.TypesIn, "a") || types.SlicesContains(obj.TypesIn, "b") || types.SlicesContains(obj.TypesIn, "c")) {
		errs = append(errs, types.NewValidationError("TypesIn elements must be one of 'a' 'b' 'c'"))
	}

	if !(!types.SlicesContains(obj.TypesNotIn, "a") && !types.SlicesContains(obj.TypesNotIn, "b") && !types.SlicesContains(obj.TypesNotIn, "c")) {
		errs = append(errs, types.NewValidationError("TypesNotIn elements must not be one of 'a' 'b' 'c'"))
	}

	return errs
}

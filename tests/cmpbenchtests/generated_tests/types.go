// Code generated by BenchTestGenerator. DO NOT EDIT.

package benchtests

type ValidGenStringRequiredStruct struct {
	Field string `valid:"required"`
}

type ValidatorStringRequiredStruct struct {
	Field string `validate:"required"`
}

type ValidGenStringEqStruct struct {
	Field string `valid:"eq=abc"`
}

type ValidatorStringEqStruct struct {
	Field string `validate:"eq=abc"`
}

type ValidGenStringEqICStruct struct {
	Field string `valid:"eq_ignore_case=abc"`
}

type ValidatorStringEqICStruct struct {
	Field string `validate:"eq_ignore_case=abc"`
}

type ValidGenStringNeqStruct struct {
	Field string `valid:"neq=abc"`
}

type ValidatorStringNeqStruct struct {
	Field string `validate:"ne=abc"`
}

type ValidGenStringNeqICStruct struct {
	Field string `valid:"neq_ignore_case=abc"`
}

type ValidatorStringNeqICStruct struct {
	Field string `validate:"ne_ignore_case=abc"`
}

type ValidGenStringLenStruct struct {
	Field string `valid:"len=5"`
}

type ValidatorStringLenStruct struct {
	Field string `validate:"len=5"`
}

type ValidGenStringMaxStruct struct {
	Field string `valid:"max=5"`
}

type ValidatorStringMaxStruct struct {
	Field string `validate:"max=5"`
}

type ValidGenStringMinStruct struct {
	Field string `valid:"min=3"`
}

type ValidatorStringMinStruct struct {
	Field string `validate:"min=3"`
}

type ValidGenStringInStruct struct {
	Field string `valid:"in=ab cd ef"`
}

type ValidatorStringInStruct struct {
	Field string `validate:"oneof=ab cd ef"`
}

type ValidGenStringEmailStruct struct {
	Field string `valid:"email"`
}

type ValidatorStringEmailStruct struct {
	Field string `validate:"email"`
}

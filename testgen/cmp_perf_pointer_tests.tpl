// Code generated by TestGen. DO NOT EDIT.

package benchtests

import (
	"testing"

	"github.com/go-playground/validator/v10"
)

{{range .Tests}}
type ValidGen{{.TestName}}Struct struct {
	Field {{.FieldType}} `valid:"{{.ValidGenTag}}"`
}

type Validator{{.TestName}}Struct struct {
	Field {{.FieldType}} `validate:"{{.ValidatorTag}}"`
}
{{end}}

{{range .Tests}}
func BenchmarkValidGen{{.TestName}}(b *testing.B) {
	var validInput {{.BasicType}} = {{.ValidInput}}
	data := &ValidGen{{.TestName}}Struct{
		Field: &validInput,
	}

	for b.Loop() {
		if err := ValidGen{{.TestName}}StructValidate(data); len(err) > 0 {
			b.FailNow()
		}
	}
}

func BenchmarkValidator{{.TestName}}(b *testing.B) {
	var validate *validator.Validate

	validate = validator.New(validator.WithRequiredStructEnabled())

	var validInput {{.BasicType}} = {{.ValidInput}}

	data := &Validator{{.TestName}}Struct{
		Field: &validInput,
	}

	for b.Loop() {
		if err := validate.Struct(data); err != nil {
			b.FailNow()
		}
	}
}
{{end}}